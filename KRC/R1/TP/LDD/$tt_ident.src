&ACCESS RO
&REL 12
&COMMENT LDD package (KSS 8.6.7 or higher)
&PARAM DISKPATH = KRC:\R1\TP\LDD
DEF $TT_IDENT( )
; FOLD SYSTEM-PROGRAMM .... NIEMALS AENDERN!
; ENDFOLD 
; FOLD Deklarationen ;%{H} % Initialisierung
;============================================
INT AXIS_NO, TEST_NO
DECL E6AXIS IDENT_START  
DECL REAL TORQMON_SAVE[6]
DECL KRLMSG_T LDE_MSG     
DECL KRLMSGOPT_T OPT      
LDE_MSG={Modul[] " ", Nr 0, Msg_txt[] "%1"}
OPT={VL_Stop TRUE,Clear_P_Reset TRUE,Log_To_DB FALSE}
IF (LDD_IS_RUNNING == TRUE) THEN
   LDD_RESETKRLVAR()
ENDIF
LDD_SETKRLVAR( )
LDD_TEST_RUN = FALSE
LDD_SILENT = TRUE
LDD_OK = FALSE
IF ( LDD_INIT_OK == FALSE ) THEN
   MsgNotify("SilentLDDConfigNotValid", "LoadDataDetermination")
   GOTO IDENT_END
ELSE
   LDD_MessageHelper("SilentLDDTestRunWarning", , 5)
ENDIF
;ENDFOLD ()
;FOLD AKTIVIERUNG, SAK, TESTBEWEGUNG
;============================================
WAIT FOR TRUE
$IDENT_STATE = #I_END 
WAIT SEC 1.0
$IDENT_STATE = #I_READY
WAIT SEC 0.1
IF ( $IDENT_STATE <> #I_READY ) THEN
   GOTO IDENT_END
ENDIF
IDENT_START = $IDENT_STARTP
IF ( $EX_AX_NUM > 0 ) THEN   
   IDENT_START.E1 = $AXIS_ACT.E1
   IDENT_START.E2 = $AXIS_ACT.E2
   IDENT_START.E3 = $AXIS_ACT.E3
   IDENT_START.E4 = $AXIS_ACT.E4
   IDENT_START.E5 = $AXIS_ACT.E5
   IDENT_START.E6 = $AXIS_ACT.E6
ENDIF
CHECKOV( 10 )
PTP IDENT_START
WAIT SEC 0.5
WAIT FOR  TRUE
WAIT SEC 0.5
FOR TEST_NO = 1 TO 10
	IDENT_START = $IDENT_STARTP	
	IF ( $EX_AX_NUM > 0 ) THEN   
  	   IDENT_START.E1 = $AXIS_ACT.E1
   	IDENT_START.E2 = $AXIS_ACT.E2
   	IDENT_START.E3 = $AXIS_ACT.E3
   	IDENT_START.E4 = $AXIS_ACT.E4
   	IDENT_START.E5 = $AXIS_ACT.E5
   	IDENT_START.E6 = $AXIS_ACT.E6
	ENDIF
   MsgNotify("SilentLDDTestRun","LoadDataDetermination",TEST_NO,,5)
   CHECKOV( 10 )
	PTP IDENT_START
   CHECKOV( 10 )
ENDFOR	
CHECKOV( 10 )
$IDENT_STATE = #I_TEST
IF ( $IDENT_STATE <> #I_TEST ) THEN
   GOTO IDENT_END
ENDIF
PTP_REL{A6 -0.001}
WHILE ( $IDENT_STATE == #I_TEST )
   WAIT SEC 0.1
ENDWHILE
WAIT SEC 0.2
LDD_TEST_RUN = TRUE
;ENDFOLD (AKTIVIERUNG, SAK, TESTBEWEGUNG)
;FOLD ENDE
IDENT_END:
LDD_RESETKRLVAR( )
$IDENT_STATE = #I_END
WAIT SEC 2.0
;ENDFOLD (ENDE)
END
;FOLD CHECKOV ;%{H}
DEF CHECKOV( NEWOV :IN )
   INT NEWOV
   IF ( VARSTATE("NEWOV") == #INITIALIZED ) THEN
   ELSE
      NEWOV = 10
   ENDIF
   IF ($MODE_OP == #T1) THEN
      $OV_PRO = 100
   ELSE
      $OV_PRO = NEWOV
   ENDIF
END
;ENDFOLD (CHECKOV)
